---
  HeatStacks.create_and_delete_stack:
    -
      args:
        template_path: "{{ current_path }}/heat/templates/default.yml.template"
      runner:
        type: "constant"
        times: {{ compute * 2 }}
        concurrency: {{ concurrency }}
      context:
        users:
          tenants: {{ compute }}
          users_per_tenant: 3
      sla:
        failure_rate:
          max: 0
    -
      args:
        template_path: "{{ current_path }}/heat/templates/server-with-volume.yaml.template"
      runner:
        timeout: 90
        type: "constant"
        times: {{ compute * 2 }}
        concurrency: {{ concurrency }}
      context:
        users:
          tenants: {{ compute }}
          users_per_tenant: 3
        api_versions:
          cinder:
            version: 2
            service_name: cinderv2
      sla:
        failure_rate:
          max: 0
    -
      args:
        template_path: "{{ current_path }}/heat/templates/server-with-volume.yaml.template"
      runner:
        type: "constant"
        times: {{ compute * 2 }}
        concurrency: {{ concurrency }}
      context:
        users:
          tenants: {{ compute }}
          users_per_tenant: 3
      sla:
        failure_rate:
          max: 0
    -
      args:
        template_path: "{{ current_path }}/heat/templates/server-with-ports.yaml.template"
      runner:
        type: "constant"
        times: {{ compute * 2 }}
        concurrency: {{ concurrency }}
      context:
        users:
          tenants: {{ compute }}
          users_per_tenant: 3
      sla:
        failure_rate:
          max: 0
    -
      args:
        template_path: "{{ current_path }}/heat/templates/resource-group-with-constraint.yaml.template"
      runner:
        type: "constant"
        times: {{ compute * 2 }}
        concurrency: {{ concurrency }}
      context:
        users:
          tenants: {{ compute }}
          users_per_tenant: 3
      sla:
        failure_rate:
          max: 0
    -
      args:
        template_path: "{{ current_path }}/heat/templates/resource-group-server-with-volume.yaml.template"
        parameters:
           num_instances: 2
        files: ["{{ current_path }}/heat/templates/server-with-volume.yaml.template"]
      runner:
        type: "constant"
        times: {{ compute * 2 }}
        concurrency: {{ concurrency }}
      context:
        users:
          tenants: {{ compute }}
          users_per_tenant: 3
      sla:
        failure_rate:
          max: 0
